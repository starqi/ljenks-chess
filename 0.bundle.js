(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './node_modules/chess_bs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/bb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/bw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/kb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/kw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/nb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/nw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/pb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/pw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/qb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/qw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/rb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/rw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst imageUrls = {\n    bb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/bb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), bw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/bw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), kb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/kb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), kw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/kw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), nb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/nb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), nw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/nw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), pb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/pb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), pw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/pw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), qb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/qb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), qw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/qw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), rb: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/rb.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), rw: !(function webpackMissingModule() { var e = new Error(\"Cannot find module './assets/rw.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())\n};\n\nclass Application {\n    constructor() {\n\n        this.boardLock = false;\n\n        this.draggedImage = null;\n        this.draggedSqX = 0;\n        this.draggedSqY = 0;\n\n        this.main = !(function webpackMissingModule() { var e = new Error(\"Cannot find module './node_modules/chess_bs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).new();\n        this.LEN = (0.9 * Math.min(window.innerWidth, window.innerHeight - document.getElementById('title').getBoundingClientRect().height) / 8) >>> 0;\n\n        // Pawn = 0, Rook, Knight, Bishop, Queen, King\n        this.numToLetter = [\n            'p', 'r', 'n', 'b', 'q', 'k'\n        ];\n\n        this.board = document.getElementById('board');\n        this.board.addEventListener('mousedown', this.onBoardMouseDown.bind(this));\n        this.board.addEventListener('mousemove', this.onBoardMouseMove.bind(this));\n        this.board.addEventListener('mouseup', this.onBoardMouseUp.bind(this));\n        this.board.addEventListener('touchstart', this.onTouchStart.bind(this));\n        this.board.addEventListener('touchmove', this.onTouchMove.bind(this));\n        this.board.addEventListener('touchend', this.onTouchEnd.bind(this));\n\n        this.dragged = document.getElementById('dragged');\n        this.dragged.width = this.LEN;\n        this.dragged.height = this.LEN;\n\n        this.squareImages = [];\n        this.wasmData = new Array(64);\n\n        for (let i = 0; i < 8; ++i) {\n            const rowElement = document.createElement('div');\n            const imageRow = [];\n            const delta = i % 2 === 0 ? 0 : 1;\n\n            for (let i = 0; i < 8; ++i) {\n                const square = document.createElement('span');\n                square.style.width = this.LEN;\n                square.style.height = this.LEN;\n                square.style.display = 'inline-block';\n                square.style.backgroundColor = (i + delta) % 2 === 0 ? '#eeeeee' : '#915355';\n                square.dataset.backgroundColor = square.style.backgroundColor;\n\n                const image = new Image();\n                image.width = this.LEN;\n                image.height = this.LEN;\n                image.style.visibility = 'hidden';\n                image.src = '';\n\n                square.append(image);\n                rowElement.append(square);\n                imageRow.push(image);\n            }\n\n            this.board.append(rowElement);\n            this.squareImages.push(imageRow);\n        }\n\n        this.isPlayerWhite = Math.random() > 0.5;\n        if (!this.isPlayerWhite) {\n            this.main.make_ai_move();\n        }\n        this.main.refresh_player_moves();\n        this.updateFromWasm();\n    }\n\n    //////////////////////////////////////////////////\n\n    onGenericDragStart(clientX, clientY) {\n        if (this.boardLock) return;\n\n        if (this.draggedImage !== null) {\n            // Contract = draggedImage is synced to null if mouse up\n            // But if any shenanigans with mouse/touch up not being called, then clean up the invisible piece\n            this.draggedImage.style.visibility = 'visible';\n        }\n\n        const sqCoords = this.getSquareCoordsFromClientCoords(clientX, clientY);\n\n        const row = this.squareImages[sqCoords.y];\n        if (row === undefined) return;\n        const image = row[sqCoords.x];\n        if (image === undefined || image.style.visibility === 'hidden') return;\n\n        image.style.visibility = 'hidden';\n        this.draggedImage = image;\n        this.dragged.src = image.src;\n        this.dragged.style.visibility = 'visible';\n        this.draggedSqY = sqCoords.y;\n        this.draggedSqX = sqCoords.x;\n        this.trySyncDragged(clientX, clientY);\n    }\n\n    trySyncDragged(clientX, clientY) {\n        const boardCoords = this.getBoardCoordsFromClientCoords(clientX, clientY);\n        if (this.draggedImage !== null) {\n            this.dragged.style.left = boardCoords.x - this.LEN / 2.0;\n            this.dragged.style.top = boardCoords.y - this.LEN / 2.0;\n        }\n    }\n\n    onGenericDragEnd(clientX, clientY) {\n        if (this.draggedImage === null) return;\n\n        this.draggedImage.style.visibility = 'visible';\n        this.draggedImage = null;\n        this.dragged.style.visibility = 'hidden';\n\n        const sqCoords = this.getSquareCoordsFromClientCoords(clientX, clientY);\n        if (this.isPlayerWhite) {\n            if (!this.main.try_move(\n                this.draggedSqX,\n                this.draggedSqY,\n                sqCoords.x,\n                sqCoords.y\n            )) return;\n        } else {\n            if (!this.main.try_move(\n                7 - this.draggedSqX,\n                7 - this.draggedSqY,\n                7 - sqCoords.x,\n                7 - sqCoords.y\n            )) return;\n        }\n\n        this.updateFromWasm();\n\n        this.boardLock = true;\n        console.log('Locked board');\n        setTimeout(() => {\n            this.main.make_ai_move();\n            this.updateFromWasm();\n            this.main.refresh_player_moves();\n            this.boardLock = false;\n            console.log('Unlocked board');\n        }, 250);\n    }\n\n    //////////////////////////////////////////////////\n\n    onBoardMouseDown(e) {\n        e.preventDefault();\n        this.onGenericDragStart(e.clientX, e.clientY);\n    }\n\n    onBoardMouseMove(e) {\n        e.preventDefault();\n        this.trySyncDragged(e.clientX, e.clientY);\n    }\n\n    onBoardMouseUp(e) {\n        e.preventDefault();\n        this.onGenericDragEnd(e.clientX, e.clientY);\n    }\n\n    //////////////////////////////////////////////////\n\n    onTouchStart(e) {\n        if (e.touches.length === 1) {\n            this.onGenericDragStart(e.touches[0].clientX, e.touches[0].clientY);\n        }\n    }\n\n    onTouchMove(e) {\n        if (e.touches.length == 1) {\n            e.preventDefault(); // Prevent scroll/zoom while drag\n            this.trySyncDragged(e.touches[0].clientX, e.touches[0].clientY);\n        }\n    }\n\n    onTouchEnd(e) {\n        if (e.touches.length === 0 && e.changedTouches.length === 1) {\n            this.onGenericDragEnd(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        } else {\n            this.onGenericDragEnd(-1, -1);\n        }\n    }\n\n    //////////////////////////////////////////////////\n\n    setSquareFromWasm(row, col) {\n        const existing = this.wasmData[row * 8 + col];\n        const num = this.isPlayerWhite ? this.main.get_piece(col, row) : this.main.get_piece(7 - col, 7 - row);\n        if (existing === num) {\n            this.colorSquare(row, col, false);\n        } else {\n            if (num === 0) {\n                this.setSquare(row, col, null);\n            } else {\n                const isWhite = num > 0;\n                const letter = this.numToLetter[Math.abs(num) - 1];\n                if (letter !== undefined) this.setSquare(row, col, letter, isWhite);\n            }\n            this.wasmData[row * 8 + col] = num;\n            if (existing !== undefined) this.colorSquare(row, col, true); // Don't color on first sync from undefined -> number\n        }\n        return num;\n    }\n\n    colorSquare(row, col, isColored) {\n        const imageRow = this.squareImages[row];\n        if (imageRow === undefined) return;\n        const image = imageRow[col];\n        if (image === undefined) return;\n\n        if (isColored) {\n            image.parentElement.style.backgroundColor = '#a33c2c';\n        } else {\n            image.parentElement.style.backgroundColor = image.parentElement.dataset.backgroundColor;        \n        }\n    }\n\n    setSquare(row, col, code, isWhite) {\n        const src = typeof code === 'string' ? imageUrls[code.toLowerCase() + (isWhite ? 'w' : 'b')] : null;\n        return this._setSquare(row, col, src);\n    }\n\n    _setSquare(row, col, src) {\n        const imageRow = this.squareImages[row];\n        if (imageRow === undefined) return;\n        const image = imageRow[col];\n        if (image === undefined) return;\n\n        if (src) {\n            image.src = src;\n            image.style.visibility = 'visible';\n        } else {\n            image.src = '';\n            image.style.visibility = 'hidden';\n        }\n    }\n\n    updateFromWasm() {\n        for (let i = 0; i < 8; ++i) {\n            for (let j = 0; j < 8; ++j) {\n                this.setSquareFromWasm(j, i);\n            }\n        }\n    }\n\n    //////////////////////////////////////////////////\n\n    getBoardCoordsFromClientCoords(clientX, clientY) {\n        const r = this.board.getBoundingClientRect();\n        return {x: clientX - r.left, y: clientY - r.top};\n    }\n\n    getSquareCoordsFromClientCoords(clientX, clientY) {\n        const r = this.getBoardCoordsFromClientCoords(clientX, clientY);\n        r.x = (r.x / this.LEN) >>> 0;\n        r.y = (r.y / this.LEN) >>> 0;\n        return r;\n    }\n}\n\nnew Application();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);